<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation=
	"http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">
	<!-- 扫描控制器包 -->
	<context:component-scan base-package="com.mono.core.controller,com.mono.shop.controller" >
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
	
	<mvc:resources location="/statics/" mapping="/statics/**"/>
	<mvc:annotation-driven />
	
	<!-- 
	<mvc:annotation-driven>
        <mvc:message-converters register-defaults="false">
            <! 将StringHttpMessageConverter的默认编码设为UTF-8 >
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <constructor-arg value="UTF-8"/>
            </bean>
            <ref bean="jacksonMessageConverter" />
        </mvc:message-converters>
    </mvc:annotation-driven>

    <bean id="jacksonMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <value>text/html;charset=UTF-8</value>
                <value>application/json;charset=UTF-8</value>
            </list>
        </property>
        <property name="objectMapper" ref="jacksonObjectMapper" />
    </bean>
     -->
	
	<bean id="jspViewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- <property name="order" value="1"/> -->
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/WEB-INF/jsp/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<!-- <bean id="freeMarkerViewResolver" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver"> 
		<property name="order" value="1"/> <property name="cache" value="false"/> 
		<property name="suffix" value=".ftl"/> <property name="viewClass" value="org.springframework.web.servlet.view.freemarker.FreeMarkerView" 
		/> <property name="contentType" value="text/html;charset=UTF-8"></property> 
		<property name="exposeRequestAttributes" value="true" /> <property name="exposeSessionAttributes" 
		value="true" /> <property name="exposeSpringMacroHelpers" value="true" /> 
		<property name="requestContextAttribute" value="base"></property> </bean> 
		<bean id="freemarkerConfig" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer"> 
		<property name="templateLoaderPath" value="/WEB-INF/ftl/" /> <property name="defaultEncoding" 
		value="UTF-8" /> <property name="freemarkerSettings"> <props> <prop key="tag_syntax">auto_detect</prop> 
		<prop key="template_update_delay">1</prop> <prop key="defaultEncoding">UTF-8</prop> 
		<prop key="url_escaping_charset">UTF-8</prop> <prop key="locale">zh_CN</prop> 
		<prop key="boolean_format">true,false</prop> <prop key="datetime_format">yyyy-MM-dd 
		HH:mm:ss</prop> <prop key="date_format">yyyy-MM-dd</prop> <prop key="time_format">HH:mm:ss</prop> 
		<prop key="number_format">0.######</prop> <prop key="whitespace_stripping">true</prop> 
		<! 空值处理<prop key="classic_compatible">true</prop> > <! <prop key="auto_import">/ftl/tags/index.ftl 
		as p,/ftl/spring.ftl as s</prop> > </props> </property> </bean> -->
		
		

	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />

	<!-- Enable Shiro Annotations for Spring-configured beans. Only run after -->
	<!-- the lifecycleBeanProcessor has run: -->	
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor">
        <property name="proxyTargetClass" value="true" />
    </bean>

    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>
</beans>